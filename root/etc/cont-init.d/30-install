#!/usr/bin/with-contenv bash

GITHUB_REPO="tidusjar/Ombi"
OMBI_FILENAME="Ombi.zip"
API_DETAILS=""

if [ -z ${API+x} ]; then
  echo "no API login used"
else
  echo "using provided API details"
  API_DETAILS="-u $GITHUB_API"
fi

OMBI_DOWNLOAD=$(curl ${API_DETAILS} -sX GET https://api.github.com/repos/${GITHUB_REPO}/releases/latest | awk '/browser_download_url/{print $4;exit}' FS='[""]')

rm -rf /app/Ombi

if [ "$DEV" = "1" ]; then
  echo "Getting Development Version";
  /usr/bin/python /get-dev.py
elif [ "$EAP" = "1" ]; then
  echo "Getting Early Access Preview";
  /usr/bin/python /get-eap.py
else
  echo "Getting Stable Version";
  /usr/bin/curl -o /tmp/${OMBI_FILENAME} -L "${OMBI_DOWNLOAD}"
fi

unzip -o /tmp/${OMBI_FILENAME} -d /tmp

mv /tmp/Release /app/Ombi
rm /tmp/${OMBI_FILENAME}

cd /config

if [ ! -f /config/Ombi.sqlite ]; then
  if [ -f /config/PlexRequests.sqlite ]; then # migrate existing db
    mv /config/PlexRequests.sqlite /config/Ombi.sqlite
  else
    sqlite3 Ombi.sqlite "create table aTable(field1 int); drop table aTable;" # create empty db
  fi
fi

# check for Backups folder in config
if [ ! -d /config/Backup ]; then
  echo "Creating Backup dir..."
  mkdir /config/Backup
fi

ln -s /config/Ombi.sqlite /app/Ombi/Ombi.sqlite
ln -s /config/Backup /app/Ombi/Backup

chown -R ombi:ombi /app
chown -R ombi:ombi /config
